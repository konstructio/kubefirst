apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: cwft-git
spec:
  templates:
  - name: git-checkout-with-gitops
    inputs:
      parameters: 
      - name: appDir
      - name: branch
        value: "{{workflow.parameters.branch}}"
        default: main
      - name: buildImage
        value: "{{workflow.parameters.buildImage}}"
        default: kubefirst/chubbo:0.1
      - name: gitopsRepoUrl
        value: "{{workflow.parameters.gitopsRepoUrl}}"
        default: https://gitlab.<AWS_HOSTED_ZONE_NAME>/kubefirst/gitops
      - name: gitRepoUrl
      artifacts:
      - name: repo-source
        path: "{{inputs.parameters.appDir}}"
        git:
          repo: "{{inputs.parameters.gitRepoUrl}}"
          revision: "{{inputs.parameters.branch}}"
          usernameSecret:
            name: ci-secrets
            key: USERNAME
          passwordSecret:
            name: ci-secrets
            key: PERSONAL_ACCESS_TOKEN
      - name: gitops-source
        path: /src/gitops
        git:
          repo: "{{inputs.parameters.gitopsRepoUrl}}"
          revision: "main"
          usernameSecret:
            name: ci-secrets
            key: USERNAME
          passwordSecret:
            name: ci-secrets
            key: PERSONAL_ACCESS_TOKEN
    container:
      image: golang:latest
      command: ["/bin/sh", "-c"]
      args: 
      - ls -la /src && 
        ls -la {{inputs.parameters.appDir}}
    outputs:
      artifacts:
      - name: repo-source
        path: /src

  - name: git-commit
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
        - name: appDir
        - name: commitMessage
        - name: repoPath
          value: "{{workflow.parameters.repoPath}}"
          default: gitlab.<AWS_HOSTED_ZONE_NAME>/kubefirst/gitops
        - name: gitUserEmail
          value: "{{workflow.parameters.gitUserEmail}}"
          default: <EMAIL_ADDRESS>
        - name: gitUsername
          value: "{{workflow.parameters.gitUsername}}"
          default: gitlab-bot
    container:
      workingDir: "{{inputs.parameters.appDir}}"
      image: golang:latest
      command: ["/bin/sh", "-c"]
      # todo is this remote set-url good enough?
      args: 
        - git remote set-url origin https://$USERNAME:$PERSONAL_ACCESS_TOKEN@{{inputs.parameters.repoPath}} 2>/dev/null;
          git remote -v;
          git config --global user.email '{{inputs.parameters.gitUserEmail}}';
          git config --global user.name '{{inputs.parameters.gitUsername}}';
          git status;
          git pull;
          git add .;
          git commit -m "{{inputs.parameters.commitMessage}}";
          git push
      envFrom:
      - secretRef:
          name: ci-secrets

  - name: git-short-sha
    inputs:
      artifacts:
      - name: repo-source
        path: /src
      parameters: 
      - name: appDir
    script:
      image: golang:latest
      workingDir: "{{inputs.parameters.appDir}}"
      command: [bash]
      source: |
        git log -1 --pretty=format:%h